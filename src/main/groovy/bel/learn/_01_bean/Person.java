package bel.learn._01_bean;


import java.beans.*;
import java.io.Serializable;
import java.util.Arrays;


// Serializable for bean spec
public class Person implements Serializable {

    private boolean male;
    private String fullName;
    private int age;
    private int[] mTestGrades;
    private double money;


    public Person() { // for bean spec
    }

    public Person(boolean male, String fullName, int age, int[] mTestGrades, double money) {
        this.male = male;
        this.fullName = fullName;
        this.age = age;
        this.mTestGrades = mTestGrades;
        this.money = money;
    }

    //
    // property change support
    //

    private PropertyChangeSupport pcs = new PropertyChangeSupport(this);

    public void addPropertyChangeListener(PropertyChangeListener listener) {
        pcs.addPropertyChangeListener(listener);
    }

    public void removePropertyChangeListener(PropertyChangeListener listener) {
        pcs.removePropertyChangeListener(listener);
    }


    //
    // property change veto support
    //

    private VetoableChangeSupport vcs = new VetoableChangeSupport(this);

    public void addVetoableChangeListener(VetoableChangeListener listener) {
        vcs.addVetoableChangeListener(listener);
    }

    public void removeVetoableChangeListener(VetoableChangeListener listener) {
        vcs.removeVetoableChangeListener(listener);
    }


    //
    // this properties are not bound
    //

    public boolean isMale() {
        return male;
    }

    public void setMale(boolean male) {
        this.male = male;
    }


    //
    // this property _is_ bound
    //

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        int oldValue = this.age;
        this.age = age;
        pcs.firePropertyChange("age", oldValue, age);
    }


    public String getFullName() {
        return fullName;
    }

    public void setFullName(String fullName) {
        String oldValue = this.fullName;
        this.fullName = fullName;
        pcs.firePropertyChange("fullName", oldValue, fullName);
    }


    //
    // indexed property
    //

    public int[] getTestGrades() {
        return mTestGrades;
    }

    public void setTestGrades(int[] tg) {
        mTestGrades = tg;
    }

    public int getTestGrades(int index) {
        return mTestGrades[index];
    }

    public void setTestGrades(int index, int grade) {
        mTestGrades[index] = grade;
    }


    //
    // bound property that is constrained
    //

    public double getMoney() {
        return money;
    }

    public void setMoney(double money) throws PropertyVetoException {
        double oldMoney = this.money;
        vcs.fireVetoableChange("money",
                oldMoney, money); // if one of the listeners throws the PropertyVetoException, it will not be set...
        this.money = money;
        pcs.firePropertyChange("money",
                oldMoney, money);
    }


    //
    // generated by intellij
    //


    @Override
    public String toString() {
        return "Person{" +
                "fullName='" + fullName + '\'' +
                ", age=" + age +
                ", mTestGrades=" + Arrays.toString(mTestGrades) +
                ", money=" + money +
                '}';
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Person person = (Person) o;

        if (age != person.age) return false;
        if (male != person.male) return false;
        if (Double.compare(person.money, money) != 0) return false;
        if (fullName != null ? !fullName.equals(person.fullName) : person.fullName != null) return false;
        if (!Arrays.equals(mTestGrades, person.mTestGrades)) return false;

        return true;
    }

    @Override
    public int hashCode() {
        int result;
        long temp;
        result = (male ? 1 : 0);
        result = 31 * result + (fullName != null ? fullName.hashCode() : 0);
        result = 31 * result + age;
        result = 31 * result + (mTestGrades != null ? Arrays.hashCode(mTestGrades) : 0);
        temp = Double.doubleToLongBits(money);
        result = 31 * result + (int) (temp ^ (temp >>> 32));
        return result;
    }

}
